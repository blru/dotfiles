(deflisten current_workspace "~/.scripts/eww/workspace-polling")
(defvar is_time_expanded false)
(defvar is_date_expanded false)

(defwindow topbar
    :monitor 0 
    :geometry (geometry :x "0%"
                :y "0px"
                :width "100%"
;                :width "${1920 - 4 * 2}px"
                :height "24px"
                :anchor "top center")
    :exclusive true
    :windowtype "dock"
    :stacking "fg"
    :focusable "none"
    (main-container)
)

(defwidget main-container []
    (centerbox
        :class "bar"
        :orientation "h"
        (logo)
        (workspace-indicator)
        (status)
    )
)

; logo
(defwidget logo []
    (button
        :onclick "~/.scripts/eww/open-general-menu&"
        :onrightclick "~/.scripts/wallpaper/random-wallpaper&"
        :halign "start"
        :hexpand true
        :class "logo"
        :tooltip "Open general menu"
        "󰣇"
    )
)

; workspace
(defwidget workspace-indicator []
    (box
        :spacing 6
        :space-evenly false
        :orientation "h"
        (workspace-dot :id 1)
        (workspace-dot :id 2)
        (workspace-dot :id 3)
        (workspace-dot :id 4)
        (workspace-dot :id 5)
        (workspace-dot :id 6)
    )
)

(defwidget workspace-dot [id]
      (label
        :class "workspace-dot"
        :text {current_workspace == id ? '' : ''}
        :class "workspace-dot ${current_workspace == id ? 'active' : ''}"
    ) 
)


; status (time/date, volume, system tray)
(defwidget status []
    (box 
        :halign "end"
        :orientation "h"
        :spacing 0
        :space-evenly false
        (systray
            :icon-size 15
            :spacing 6
            :orientation "h"
        )
        (indicators)
        (date)
        (time)
    ) 
)

(defwidget date []
    (eventbox
        :onclick "${EWW_CMD} update is_date_expanded=${!is_date_expanded}"
        :tooltip "Toggle expanded date"
        (box
            :orientation "h"
            :space-evenly false
            :spacing 0
            :class "date"
            (divider :text "")
            (label
                :class "text"
                :text {formattime(EWW_TIME, is_date_expanded ? "%Y/%m/%d (%a, %b %d)" : "%Y/%m/%d")}
                :yalign 0.5
                :xalign 0.5
            )
        )
    )
)

(defwidget time []
    (eventbox
        :onclick "${EWW_CMD} update is_time_expanded=${!is_time_expanded}"
        :tooltip "Toggle expanded time"
        (box
            :orientation "h"
            :space-evenly false
            :spacing 0
            :class "time"
            (divider :text "")
            (label
                :class "text"
                :text {formattime(EWW_TIME, is_time_expanded ? "%H:%M:%S" : "%H:%M")}
                :yalign 0.5
                :xalign 0.5
            )
        )
    )
)

(defwidget indicators []
    (box
        :orientation "h"
        :space-evenly false
        :spacing 8
        :class "indicators"
        (divider :text "" :additional_class "last")
        (battery-indicator :visible {EWW_BATTERY != ""} :battery_info {jq(EWW_BATTERY ?: `{}`, '[.[]][0]')})
        (divider :visible {EWW_BATTERY != ""} :text '')
        (audio-indicator :device_type "SOURCE")
        (divider :text "")
        (audio-indicator :device_type "SINK")
    )
)

(defwidget audio-indicator [device_type]
    (indicator
        :icon_class {(device_type == "SOURCE" && !audio[device_type].isMuted) ? 'icon-alt' : 'icon'}
        :icon {audio[device_type].isMuted == true ? (device_type == "SINK" ? "" : "") : (device_type == "SINK" ? "" : "󰍬")}
        :value {audio[device_type].volume + "%"}
    )
)

(defwidget battery-indicator [battery_info visible]
    (indicator
        :visible visible
        :icon_class "icon-alt"
        :icon {battery_info?.status == "Charging" ? "󰂄" : "󰁹"}
        :value {battery_info?.capacity + "%"}
    )
)

(defwidget indicator [?icon_class icon value ?visible]
    (box
        :visible {visible ?: true}
        :orientation "h"
        :space-evenly false
        :spacing 8
        :class "indicator"
        (label
            :class icon_class
            :text icon
        ) 
        (label
            :class "percentage"
            :width 36
            :text value
        )
    )
)

(defwidget divider [text ?additional_class ?visible]
    ; HACK: Fixes divider appearing too small
    (transform
        :visible {visible ?: true}
        :scale-y "120%"
        :translate-y "-10%"
        (label
            :class "divider ${additional_class}"
            :text text
            :yalign 0.5
            :xalign 0.5
            :justify "fill"
        )
    )
)
